@model IEnumerable<dynamic>
@{
    ViewData["Title"] = "Danh sách nhân viên";
    List<string> BreadCrumb = new List<string>();
    //BreadCrumb.Add("<a href='index.html' class='breadcrumb-item'>name</a>");
    BreadCrumb.Add("<span class='breadcrumb-item active'> Nhân viên</span>");
    ViewBag.BreadCrumb = BreadCrumb;
}

<style>
    .popup {
        /* Các thuộc tính khác */
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
        z-index: 9999;
    }
    .icon-space{
        margin-right:5px;
    }
    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        grid-gap: 20px;
    }

    .form-column {
        display: flex;
        flex-direction: column;
    }

    .form-buttons {
        display: flex;
        justify-content: end;
        margin-top: 20px;
    }

    .popup h2 {
        margin-top: 0;
    }

    .popup label {
        display: block;
        margin-bottom: 5px;
    }

    .popup select,
    .popup input[type="text"],
    .popup input[type="number"],
    .popup input[type="date"]{
        width: 100%;
        padding: 5px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
    }

    .popup .input-currency {
        text-align: right;
    }

    .popup button {
        padding: 8px 16px;
        border: none;
        border-radius: 3px;
        background-color: #007bff;
        color: #fff;
        cursor: pointer;
        margin-right: 10px;
    }

    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 9998;
        display: none;
    }
</style>


<div class="content">
    <div class="card-body">
        <a id="openPopup" class="btn btn-primary">Thêm Nhân Viên</a>
    </div>
    <div class="card">
        <div id="myPopup" class="popup">
            <h2>Nhập thông tin</h2>
            <div class="form-row">
                <div class="form-column">
                    <label for="FullName">Họ và tên:</label>
                    <input type="text" placeholder="Họ Tên" id="fullName" class="input-currency"> 
                    <label for="DOB">Ngày sinh:</label>
                    <input type="date" id="dob">
                    <label for="genderType">Giới tính:</label>
                    <select id="genderTypeDropdown">
                        @if (ViewBag.Genders != null)
                        {
                            @foreach (var gender in ViewBag.Genders)
                            {
                                <option value="@gender.GenderID">@gender.GenderName</option>
                            }
                        }
                        else
                        {
                            <p>Danh sách trống.</p>
                        }
                    </select>
                </div>
                <div class="form-column">
                    <label for="phone">Điện Thoại:</label>
                    <input type="text" placeholder="09(xxxx)" id="phone">


                    <label for="email">Email:</label>
                    <input type="text" placeholder="abc@gmail.com" id="email">
                    <label for="departmentType">Phòng ban:</label>
                    <select id="departmentTypeDropdown">
                        @if (ViewBag.Departments != null)
                        {
                            @foreach (var departmentType in ViewBag.Departments)
                            {
                                <option value="@departmentType.DepartmentID">@departmentType.DepartmentName</option>
                            }
                        }
                        else
                        {
                            <p>Danh sách trống.</p>
                        }
                    </select>                    
                </div>
                <div class="form-column">
                    <label for="positionType">Chức vụ:</label>
                    <select id="positionTypeDropdown">
                        @if (ViewBag.Positions != null)
                        {
                            @foreach (var position in ViewBag.Positions)
                            {
                                <option value="@position.PositionID">@position.PositionName</option>
                            }
                        }
                        else
                        {
                            <p>Danh sách đơn vị tính trống.</p>
                        }
                    </select>
                    <label for="employeeType">Loại nhân viên:</label>
                    <select id="employeeTypeDropdown">
                        @if (ViewBag.EmployeeTypes != null)
                        {
                            @foreach (var employeeType in ViewBag.EmployeeTypes)
                            {
                                <option value="@employeeType.EmployeeTypeID">@employeeType.EmployeeTypeName</option>
                            }
                        }
                        else
                        {
                            <p>Danh sách trống.</p>
                        }
                    </select>
                </div>
            </div>
            <div class="form-buttons">
                <button id="saveButton">Lưu</button>
                <button id="closePopup">Đóng</button>
            </div>
        </div>
    </div>

    <div class="overlay"></div>
    <div class="card-body">
        <table class="table datatable-column-search-inputs service" id="serviceTable">
            <thead>
                <tr>
                    <th>STT</th>
                    <th>Họ Tên</th>
                    <th>Ngày Sinh</th>
                    <th>Giới Tính</th>
                    <th>SĐT</th>
                    <th>Email</th>
                    <th>Phòng Ban</th>
                    <th>Chức Vụ</th>
                    <th>Loại Nhân Viên</th>
                </tr>
            </thead>
            <tbody  id="serviceTableBody">

                @if (ViewBag.Employees != null)
                {
                    int stt = 1;
                   
                    @foreach (var employee in ViewBag.Employees)
                    {
                        // Khai báo biến đếm và tăng giá trị sau mỗi lần lặp
                        <tr>
                            <td>@stt</td>
                            <td>@employee.FullName</td>
                            @{
                                var dob = DateTime.Parse(employee.DOB.ToString());
                                var formattedDOB = dob.ToString("dd'/'MM'/'yyyy");
                            }
                            <td>@formattedDOB</td>
                            <td>@employee.GenderName</td>
                            <td>@employee.Phone</td>
                            <td>@employee.Email</td>
                            <td>@employee.DepartmentName</td>
                            <td>@employee.PositionName</td>
                            <td>@employee.EmployeeTypeName</td>
                            <td>
                                <a data-employeeid="@employee.EmployeeID" href="#" onclick="openEditPopup(@employee.EmployeeID)"><i class="fa-solid fa-pen-to-square"></i></a>
                                <a class="delete-link" data-employeeid="@employee.EmployeeID" onclick="deleteEmployee(event, @employee.EmployeeID)"><i class="fa-solid fa-trash-can"></i></a>
                            </td>
                        </tr>
                        stt++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7">Không có dữ liệu</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    function deleteEmployee(event, employeeID) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết

        var $deletedRow = $(event.target).closest('tr'); // Lấy thẻ cha là <tr> chứa dòng

        // Gửi Ajax request để xóa dịch vụ
        $.ajax({
            url: '/Employees/Delete',
            type: 'DELETE',
            dataType: 'json',
            data: { employeeID: employeeID },
            success: function (result) {
                alert("Xóa thành công!");

                // Loại bỏ dòng vừa click xoá khỏi bảng
                $deletedRow.remove();
            },
            error: function () {
                alert("Lỗi: Xóa không thành công!");
            }
        });
    }
</script>

<script>
    var selectedEmployeeID;

    $("#openPopup").click(function () {
        openCreatePopup();
    });

    function openCreatePopup() {
        $("#myPopup").show();
        $(".overlay").show();
        $("body").addClass("popup-active");
    }
    $("#closePopup").click(function () {
        $("#myPopup").hide();
        $(".overlay").hide();
        $("body").removeClass("popup-active");

        $("#fullName").val("");
        $("#phone").val("");
        $("#email").val("");
    });

    function openEditPopup(employeeID) {
        $("#myPopup").show();
        $(".overlay").show();
        $("body").addClass("popup-active");
        selectedEmployeeID = employeeID;

        if (employeeID) {
            getEmployeeByID(employeeID, function (getEmployee) {
                if (getEmployee) {
                    var genderName = getEmployee.genderName;
                    var departmentName = getEmployee.departmentName;
                    var positionName = getEmployee.positionName;
                    var employeeTypeName = getEmployee.employeeTypeName;
                    var $genderTypeDropdown = $("#genderTypeDropdown");  
                    var $departmentTypeDropdown = $("#departmentTypeDropdown"); 
                    var $positionTypeDropdown = $("#positionTypeDropdown");
                    var $employeeTypeDropdown = $("#employeeTypeDropdown");
                    var dob = new Date(getEmployee.dob); // Chuyển đổi ngày sinh thành đối tượng Date
                    var year = dob.getFullYear().toString().padStart(4, "0");
                    var month = (dob.getMonth() + 1).toString().padStart(2, "0");
                    var day = dob.getDate().toString().padStart(2, "0");
                    var formattedDOB = year + "-" + month + "-" + day;

                    $genderTypeDropdown
                        .find("option")
                        .filter(function () {
                            return $(this).text().trim() === genderName;
                        })
                        .prop("selected", true);

                    $departmentTypeDropdown
                        .find("option")
                        .filter(function () {
                            return $(this).text().trim() === departmentName;
                        })
                        .prop("selected", true);
                    $positionTypeDropdown
                        .find("option")
                        .filter(function () {
                            return $(this).text().trim() === positionName;
                        })
                        .prop("selected", true);
                    $employeeTypeDropdown
                        .find("option")
                        .filter(function () {
                            return $(this).text().trim() === employeeTypeName;
                        })
                        .prop("selected", true);

                    $("#dob").val(formattedDOB);
                    $("#fullName").val(getEmployee.fullName);
                    $("#phone").val(getEmployee.phone);
                    $("#email").val(getEmployee.email);
                }
            });
        }
    }

    function getIndexByValue(selectElement, value) {
        return selectElement.find("option[value='" + value + "']").index();
    }

    function getEmployeeByID(employeeID, callback) {
        $.ajax({
            url: "/Employees/GetEmployee",
            type: "GET",
            dataType: "json",
            data: { EmployeeID: employeeID },
            success: function (data) {
                var getEmployee = data.employee[0];

                if (typeof callback === "function") {
                    callback(getEmployee);
                }
            },
            error: function (xhr, status, error) {
                console.log("Lỗi khi lấy:", error);
                alert("Lỗi khi lấy. Vui lòng kiểm tra console log.");
            },
        });
    }

    $(document).ready(function () {
        $("#saveButton").click(function () {
            var employeeID = selectedEmployeeID;
            var genderID = $("#genderTypeDropdown").val(); 
            var departmentID = $("#departmentTypeDropdown").val();
            var positionID = $("#positionTypeDropdown").val();
            var employeeTypeID = $("#employeeTypeDropdown").val();
            var dob = new Date($("#dob").val());
            var formattedDOB = dob.getDate() + '/' + (dob.getMonth() + 1) + '/' + dob.getFullYear();
            var phone = $("#phone").val();
            var email = $("#email").val();
            var fullName = $("#fullName").val();
           

            var data = {
                EmployeeID: employeeID,
                FullName: fullName,
                DOB: formattedDOB,
                Phone: phone,
                Email: email,
                GenderID: genderID,
                DepartmentID: departmentID,
                PositionID: positionID,
                EmployeeTypeID: employeeTypeID
            };
           

            if (employeeID) {
                $.ajax({
                    url: "/Employees/Update",
                    type: "POST",
                    dataType: "json",
                    data: data,
                    success: function (data) {
                        alert("Cập nhật thành công!");
                        // Ẩn popup và overlay
                        $("#myPopup").hide();
                        $(".overlay").hide();
                        $("body").removeClass("popup-active");

                        $("#fullName").val("");
                        $("#phone").val("");
                        $("#email").val("");
                        location.reload();
                    },
                    error: function (error) {
                        console.log("Lỗi khi cập nhật:", error);
                        alert("Lỗi khi cập nhật. Vui lòng kiểm tra console log.");
                    }
                });


            } else {
                $.ajax({
                    url: '/Employees/Create',
                    type: 'POST',
                    dataType: 'json',
                    data: data,
                    success: function (data) {
                        // Hiển thị thông báo
                        alert("Tạo thành công!");
                       
                        // Ẩn popup và overlay
                        $("#myPopup").hide();
                        $(".overlay").hide();
                        $("body").removeClass("popup-active");
                        $("#fullName").val("");
                        $("#phone").val("");
                        $("#email").val("");

                        // Lấy thông tin dịch vụ mới từ kết quả trả về
                        var newEmployee = data.employee[0];
                        var dob = new Date(newEmployee.dob);
                        // Format ngày tháng
                        var formattedDOB = dob.getDate() + '/' + (dob.getMonth() + 1) + '/' + dob.getFullYear();
                        var newRow = '<tr>' +
                            '<td>' + ($('.table.datatable-column-search-inputs.service tbody tr').length + 1) + '</td>' +
                            '<td>' + newEmployee.fullName + '</td>' + // Họ Tên
                            '<td>' + formattedDOB + '</td>' + // Ngày Sinh
                            '<td>' + newEmployee.genderName + '</td>' + // Giới Tính
                            '<td>' + newEmployee.phone + '</td>' + // SĐT
                            '<td>' + newEmployee.email + '</td>' + // Email
                            '<td>' + newEmployee.departmentName + '</td>' + // Phòng Ban
                            '<td>' + newEmployee.positionName + '</td>' + // Chức Vụ
                            '<td>' + newEmployee.employeeTypeName + '</td>' + // Loại Nhân Viên
                            '<td>' +
                            '<a data-employeeid="' + newEmployee.employeeID + '" href="#" onclick="openEditPopup(' + newEmployee.employeeID + ')"><i class="fa-solid fa-pen-to-square"></i></a>' +
                            '<span class="icon-space"></span>' +
                            '<a class="delete-link" data-employeeid="' + newEmployee.employeeID + '" onclick="deleteEmployee(event, ' + newEmployee.employeeID + ')"><i class="fa-solid fa-trash-can"></i></a>' +
                            '</td>' +
                            '</td>' +
                            '</tr>';
                             $('.table.datatable-column-search-inputs.service tbody').append(newRow);
                       
                    },
                    error: function (error) {
                        console.log("Lỗi khi tạo:", error);
                        alert("Lỗi khi tạo. Vui lòng kiểm tra console log.");
                    }
                });
            }
        });
    });
</script>
